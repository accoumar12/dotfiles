{
  // https://gist.github.com/rstacruz/a48d41de41af64d357f21264a9cdd5f2
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "editor.snippetSuggestions": "top",
  "files.refactoring.autoSave": true,
  "vim.foldfix": true,
  "python.analysis.indexing": true,
  "python.analysis.autoImportCompletions": true,
  "editor.codeActionsOnSave": {
    // "source.organizeImports": "explicit"
    "source.fixAll": "explicit",
    // "source.addMissingImports": true,
  },
  "remote.SSH.remotePlatform": {
    "thor.d3s": "linux",
    "192.168.0.58": "linux",
    "192.168.0.54": "linux",
    "thor": "linux",
    "algo": "linux"
  },
  "git.autofetch": true,
  "editor.inlineSuggest.enabled": true,
  "editor.stickyScroll.enabled": true,
  "remote.downloadExtensionsLocally": true,
  "vim.handleKeys": {
    "<C-c>": false,
    "<C-w>": false,
    //   "<C-f>": false,
    "<C-a>": false,
    //   "<C-b>": false,
    //   "<C-q>": false,
    "<C-n>": false
  },
  "vim.useSystemClipboard": true,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.color": "#a9dc7660",
  "vim.highlightedyank.duration": 250,
  "vim.leader": "<space>",
  "notebook.lineNumbers": "on",
  "editor.lineNumbers": "relative",
  "workbench.colorCustomizations": {
    "editorLineNumber.foreground": "#838181",
    // "editorError.foreground": "#00000000",
    // "editorWarning.foreground": "#00000000",
    // "editorInfo.foreground": "#00000000"
  },
  "vim.normalModeKeyBindingsNonRecursive": [
    // Quick copy paste and comment line.
    {
      "before": [
        "y",
        "c",
        "c"
      ],
      "after": [
        "y",
        "y",
        "g",
        "c",
        "c",
        "p"
      ]
    },
    // without this setting for some reason the centering is not correct when going down from the very top.
    {
      "before": [
        "<C-d>"
      ],
      "after": [
        "C-d",
        "z",
        "z"
      ]
    },
    {
      "before": [
        "<leader>",
        "a"
      ],
      "commands": [
        "vscode-harpoon.addEditor"
      ]
    },
    {
      "before": [
        "<leader>",
        "e"
      ],
      "commands": [
        "vscode-harpoon.editEditors"
      ]
    },
    {
      "before": [
        "<leader>",
        "p",
        "e"
      ],
      "commands": [
        "vscode-harpoon.editorQuickPick"
      ]
    },
    {
      "before": [
        "<leader>",
        "1"
      ],
      "commands": [
        "vscode-harpoon.gotoEditor1"
      ]
    },
    {
      "before": [
        "<leader>",
        "2"
      ],
      "commands": [
        "vscode-harpoon.gotoEditor2"
      ]
    },
    {
      "before": [
        "<leader>",
        "3"
      ],
      "commands": [
        "vscode-harpoon.gotoEditor3"
      ]
    },
    {
      "before": [
        "<leader>",
        "4"
      ],
      "commands": [
        "vscode-harpoon.gotoEditor4"
      ]
    },
    {
      "before": [
        "<leader>",
        "5"
      ],
      "commands": [
        "vscode-harpoon.gotoEditor5"
      ]
    },
    {
      "before": [
        "<Leader>",
        "r"
      ],
      "commands": [
        "editor.action.marker.next"
      ]
    },
    {
      "before": [
        "<Leader>",
        "u"
      ],
      "commands": [
        "editor.unfoldAll"
      ]
    },
    {
      "before": [
        "<Leader>",
        "c"
      ],
      "commands": [
        "editor.action.quickFix"
      ]
    },
    {
      "before": [
        "<Leader>",
        "j"
      ],
      "commands": [
        ":bprevious"
      ]
    },
    {
      "before": [
        "<Leader>",
        "k"
      ],
      "commands": [
        ":bnext"
      ]
    },
    {
      "before": [
        "<Leader>",
        "v"
      ],
      "commands": [
        ":vsplit"
      ]
    },
    {
      "before": [
        "<Leader>",
        "s"
      ],
      "commands": [
        ":split"
      ]
    },
    {
      "before": [
        "leader",
        "h"
      ],
      "commands": [
        "workbench.action.focusLeftGroup"
      ]
    },
    {
      "before": [
        "leader",
        "l"
      ],
      "commands": [
        "workbench.action.focusRightGroup"
      ]
    },
    {
      "before": [
        "<Leader>",
        "g"
      ],
      "commands": [
        "magit.status"
      ]
    },
    {
      "before": [
        "<Leader>",
        "f"
      ],
      "commands": [
        "editor.action.rename"
      ]
    },
    {
      "before": [
        "<Leader>",
        "T"
      ],
      "commands": [
        "workbench.action.showAllSymbols"
      ]
    },
    {
      "before": [
        "<Leader>",
        "t"
      ],
      "commands": [
        "workbench.action.gotoSymbol"
      ]
    },
    {
      "before": [
        "leader",
        "w"
      ],
      "commands": [
        ":w!"
      ]
    },
    {
      "before": [
        "leader",
        "q"
      ],
      "commands": [
        ":wq"
      ]
    },
    {
      "before": [
        "leader",
        "x"
      ],
      "commands": [
        ":x!"
      ]
    },
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    },
    {
      "before": [
        "J"
      ],
      "commands": [
        "editor.action.moveLinesDownAction"
      ]
    },
    {
      "before": [
        "K"
      ],
      "commands": [
        "editor.action.moveLinesUpAction"
      ]
    },
  ],
  "indentRainbow.indicatorStyle": "light",
  "indentRainbow.lightIndicatorStyleLineWidth": 1,
  // the same colors as above but more visible
  "indentRainbow.colors": [
    "rgba(255,255,64,0.3)",
    "rgba(127,255,127,0.3)",
    "rgba(255,127,255,0.3)",
    "rgba(79,236,236,0.3)"
  ],
  // useful to keep the cursor in the middle of the screen
  "editor.cursorSurroundingLines": 1000,
  "window.commandCenter": false,
  "workbench.layoutControl.enabled": false,
  "window.restoreFullscreen": true,
  "editor.minimap.enabled": false,
  "editor.renderWhitespace": "all",
  "workbench.iconTheme": "symbols",
  "workbench.editorAssociations": {
    "*.copilotmd": "vscode.markdown.preview.editor",
    "*.pdf": "latex-workshop-pdf-hook",
    "git-rebase-todo": "gitlens.rebase"
  },
  "settingsSync.keybindingsPerPlatform": false,
  // "terminal.integrated.sendKeybindingsToShell": true,
  "editor.wordWrap": "on",
  "git.openRepositoryInParentFolders": "never",
  "workbench.startupEditor": "none",
  "breadcrumbs.enabled": false,
  "vsicons.dontShowNewVersionMessage": true,
  "workbench.activityBar.location": "hidden",
  "gitlens.codeLens.enabled": false,
  "mypy.dmypyExecutable": "/home/maccou/miniconda3/envs/myenv/bin/dmypy",
  "workbench.sideBar.location": "right",
  "gitlens.currentLine.enabled": false,
  "terminal.integrated.env.linux": {},
  "mypy.enabled": false,
  "security.workspace.trust.untrustedFiles": "open",
  "symbols.hidesExplorerArrows": false,
  "svelte.enable-ts-plugin": true,
  "[dotenv]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[ignore]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "git.mergeEditor": true,
  "debug.focusWindowOnBreak": false,
  "debug.inlineValues": "off",
  "sqltools.format": {
    "reservedWordCase": "upper",
    "linesBetweenQueries": 1,
    "uppercaseKeywords": true,
  },
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lockb",
    "*.sqlite": "${capture}.${extname}-*",
    "*.db": "${capture}.${extname}-*",
    "*.sqlite3": "${capture}.${extname}-*",
    "*.db3": "${capture}.${extname}-*",
    "*.sdb": "${capture}.${extname}-*",
    "*.s3db": "${capture}.${extname}-*"
  },
  "files.eol": "\n",
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "todohighlight.isEnable": true,
  "todo-tree.general.tags": [
    "FIXME",
    "TODO",
    "NOTE",
    "???"
  ],
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[latex]": {
    "editor.defaultFormatter": "James-Yu.latex-workshop"
  },
  "security.allowedUNCHosts": [
    "wsl$",
    "wsl.localhost"
  ],
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "todo-tree.general.tagGroups": {},
  "[mdx]": {
    "editor.defaultFormatter": "unifiedjs.vscode-mdx"
  },
  // "github.copilot.selectedCompletionModel": "gpt-4o-copilot",
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one"
  },
  "[dockercompose]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.editorLargeFileConfirmation": 70,
  "workbench.colorTheme": "GitHub Dark Default",
  "remote.SSH.configFile": "C:\\Users\\MartinAccou\\.ssh\\config",
  "gitlens.views.scm.grouped.views": {
    "commits": true,
    "branches": true,
    "remotes": true,
    "stashes": true,
    "tags": true,
    "worktrees": true,
    "contributors": true,
    "fileHistory": false,
    "repositories": true,
    "searchAndCompare": true,
    "launchpad": false
  },
  "chat.instructionsFilesLocations": {
    ".github/instructions": true,
    "/tmp/postman-collections-post-response.instructions.md": true,
    "/tmp/postman-collections-pre-request.instructions.md": true,
    "/tmp/postman-folder-post-response.instructions.md": true,
    "/tmp/postman-folder-pre-request.instructions.md": true,
    "/tmp/postman-http-request-post-response.instructions.md": true,
    "/tmp/postman-http-request-pre-request.instructions.md": true
  },
  "github.copilot.enable": {
    "*": false,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  },
  "github.copilot.nextEditSuggestions.enabled": true,
  "docker.extension.enableComposeLanguageServer": false,
  // "github.copilot.advanced": {
  //   "authProvider": "github-enterprise"
  // },
  // ======================================================
  //    BEGIN -- SETTINGS TO HIDE TITLEBAR
  //  this uses the subframe7536.custom-ui-style extension to load custom css
  "window.menuBarVisibility": "hidden",
  "window.customTitleBarVisibility": "auto",
  "window.titleBarStyle": "native",
  "custom-ui-style.electron": {
      "frame": false,
      "titleBarStyle": "hiddenInset"
  },
  "custom-ui-style.stylesheet": {
      ".container > .title": {
          "display": "none !important;"
      }
  },
  "workbench.statusBar.visible": false,
  "python.defaultInterpreterPath": "/bin/python3",
  // ======================================================
  // (END) SETTINGS TO HIDE WINDOW TITLEBAR ====
  // ======================================================
}